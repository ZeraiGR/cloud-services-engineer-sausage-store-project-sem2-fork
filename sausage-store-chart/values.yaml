global:
  imagePullPolicy: Always
  ###vault:
  ###  host: ip
  ###  name: vault
  ###  vaultToken: someToken


frontend:
  replicas: 1
  revisionHistoryLimit: 15
  strategy:
    type: Recreate
  service:
    port: 80
  ingress:
    host: front-kir1llgruz.2sem.students-projects.ru
    secretName: 2sem-students-projects-wildcard-secret
    path: /
    pathType: Prefix
  containerPort: 80
  image: zeraigr/sausage-frontend:latest
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "128Mi"
      cpu: "1"
  nginxConf: nginx.conf

backend:
  annotations:
    path: /actuator/prometheus
    port: "8080"
    scrape: "true"
  env:
    postgresUri: jdbc:postgresql://postgresql:5432/sausage-store
    postgresUser: store
    postgresPassword: storepassword
    reportPath: /logs/reports
    logPath: /logs
  service:
    port: 8080
  revisionHistoryLimit: 15
  replicas: 1
  strategy:
  ### Опишите стратегию RollingUpdate для бэкенда
  image: zeraigr/sausage-backend:latest
  imagePullPolicy: Always
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "1"
  containerPort: 8080
  livenessProbe:
  ### Опишите LivenessProbe для бэкенда
  vpa:
  ### Опишите VPA для бэкенда

backend-report:
  replicas: 1
  image:
    repository: zeraigr/sausage-backend-report
    tag: "latest"
  
  strategy:
    type: Recreate

  containerPort: 8080

  service:
    port: 8080

  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "500m"

  hpa:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 75

infra:
  postgresql:
    image:
      repository: postgres
      tag: 14.18-alpine
    persistence:
      size: 1Gi
    auth:
      database: sausagestore
      username: root
      password: rootpassword
  mongodb:
    env:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    containerPort: 27017
