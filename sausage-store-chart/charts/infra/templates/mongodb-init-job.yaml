---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-mongodb-init-job
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      initContainers:
      - name: wait-for-mongodb
        image: busybox:1.36
        command: ['sh', '-c', 'until nslookup mongodb-service; do echo "waiting for mongodb..."; sleep 2; done;']

      containers:
      - name: mongodb-init
        image: mongo:7.0
        command:
          - "mongosh"
          - "--host"
          - "mongodb-service"
          - "--username"
          - "$(MONGO_INITDB_ROOT_USERNAME)"
          - "--password"
          - "$(MONGO_INITDB_ROOT_PASSWORD)"
          - "--authenticationDatabase"
          - "admin"
          - "--eval"
          - "db.getSiblingDB('$(REPORTS_DB)').createUser({ user: '$(REPORTS_USER)', pwd: '$(REPORTS_PASSWORD)', roles: [{ role: 'readWrite', db: '$(REPORTS_DB)' }]})"
        env:
          - name: MONGO_INITDB_ROOT_USERNAME
            valueFrom:
              configMapKeyRef:
                name: mongodb-conf
                key: MONGO_INITDB_ROOT_USERNAME
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: mongodb-conf
                key: MONGO_INITDB_ROOT_PASSWORD

          - name: REPORTS_DB
            value: {{ .Values.global.mongodb.reports_user.database | quote }}
          - name: REPORTS_USER
            value: {{ .Values.global.mongodb.reports_user.username | quote }}
          - name: REPORTS_PASSWORD
            value: {{ .Values.global.mongodb.reports_user.password | quote }}
      restartPolicy: OnFailure
  backoffLimit: 4